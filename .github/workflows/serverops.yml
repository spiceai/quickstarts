name: serverops

on:
  push:
    branches:
      - trunk
    paths:
      - "serverops/**"
  pull_request:
    branches:
      - trunk
    paths:
      - "serverops/**"
  schedule:
    - cron: "19 18 * * 4"
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: serverops

jobs:
  serverops:
    name: serverops> ${{ matrix.display_name }}
    runs-on: ubuntu-latest
    env:
      GOVER: 1.17

    strategy:
      fail-fast: false
      matrix:
        version: [released, edge]
        include:
          - version: released
            context: docker
            spicepod_version: latest
            display_name: https://install.spiceai.org
          - version: edge
            context: metal
            spicepod_version: 0.2.0
            display_name: spiceai/spiceai@trunk

    steps:
      - uses: actions/checkout@v2

      - name: install Spice.ai (edge, metal)
        if: matrix.version == 'edge'
        uses: spiceai/samples/.github/actions/install-edge-metal@trunk

      - name: update PATH
        if: matrix.version == 'released'
        run: |
          echo "PATH=~/.spice/bin:$PATH" >> $GITHUB_ENV

      - name: install Spice.ai (https://install.spiceai.org)
        if: matrix.version == 'released'
        run: |
          curl https://install.spiceai.org | /bin/bash

      - name: start Spice.ai runtime
        run: |
          spice run --context ${{ matrix.context }} &

      - name: wait for Spice.ai runtime healthy
        run: |
          timeout 120 bash -c 'while [[ "$(curl -s -w 200 http://localhost:8000/health)" != "ok200" ]]; do sleep 1; done' || false

      - name: fetch diagnostics
        run: |
          curl http://localhost:8000/api/v0.1/diagnostics

      - name: get quickstart pod
        run: |
          spice add quickstarts/serverops

      - name: install npm packages
        run: |
          npm install

      - name: fetch pods
        run: |
          curl -s http://localhost:8000/api/v0.1/pods | jq

      - name: fetch observations
        run: |
          curl -s http://localhost:8000/api/v0.1/pods/serverops/observations

      - name: start serverops powershell script
        run: |
          timeout 60 pwsh serverops.ps1 | tee serverops-ps.out || true

      - name: fetch recommendations
        run: |
          curl -s http://localhost:8000/api/v0.1/pods/serverops/recommendation | jq

      - name: check output for success
        run: |
          grep -E "any|now" serverops-ps.out && echo "Found successful action based on recommendation" || exit 1

      - name: start serverops app
        run: |
          timeout 30 node serverops.js | tee serverops-node.out || true

      - name: check output for success
        run: |
          grep -E "any|now" serverops-node.out && echo "Found successful action based on recommendation" || exit 1
